@page "/tree-grid/virtual-scrolling"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.TreeGrid
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@using BlazorDemos
@using ej2_blazor_virtualdata
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the Tree Grid component with the horizontal and vertical scrollbars to view the exceeded tree grid content in list binding.</p>
</SampleDescription>
<ActionDescription>
    <p>The Tree Grid UI virtualization allows it to render only rows and columns visible within the view-port without buffering the entire datasource. Tree Grid supports both row and column virtualization. To enable row virtualization, set <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.SfTreeGrid-1.html#Syncfusion_Blazor_TreeGrid_SfTreeGrid_1_EnableVirtualization'>EnableVirtualization</a></code> property as true. For column virtualization, set <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.SfTreeGrid-1.html#Syncfusion_Blazor_TreeGrid_SfTreeGrid_1_EnableColumnVirtualization'>EnableColumnVirtualization</a></code> property as true.</p>
    <p>In this demo, Tree Grid is rendered with row and column virtualization. Tree Grid is binded with 10000 rows and 20 columns</p>
    <p>More information on the Virtual Scrolling can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/treegrid/virtual'>documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            @{
                if (Data)
                {
                    <span id="initialload" class="topload">Loading 10,000 Rows and 20 Columns</span>
                    <div class="loading">
                        <span id="spancontrol" class="visible">Generating Data </span>
                        <img src="@UriHelper.ToAbsoluteUri($"images/data-grid/spinner.gif")" />
                    </div>
                }
                else
                {
                    <span id="afterload" class="topload">Loading 10,000 Rows and 20 Columns</span>
                }
            }
        <SfTreeGrid DataSource="@TreeGridData" IdMapping="TaskID" TreeColumnIndex="1" ParentIdMapping="ParentID" Height="410" Width="auto" EnableHover="false" EnableVirtualization="true" EnableColumnVirtualization="true">
            <TreeGridPageSettings PageSize="40"></TreeGridPageSettings>
            <TreeGridColumns>
                <TreeGridColumn Field="TaskID" HeaderText="Jersey No" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="FIELD1" HeaderText="Name" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="FIELD2" HeaderText="Year" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="FIELD3" HeaderText="Stint" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="FIELD4" HeaderText="TMID" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="FIELD5" HeaderText="LGID" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="FIELD6" HeaderText="GP" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field7" HeaderText="GS" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field8" HeaderText="Minutes" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field9" HeaderText="Points" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field10" HeaderText="ORebounds" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field11" HeaderText="DRebounds" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field12" HeaderText="Rebounds" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field13" HeaderText="Assists" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field14" HeaderText="Steals" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field15" HeaderText="Blocks" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field16" HeaderText="TurnOvers" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field17" HeaderText="PF" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field18" HeaderText="FgAttempted" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field19" HeaderText="FgMade" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
                <TreeGridColumn Field="Field20" HeaderText="FtAttempted" TextAlign="TextAlign.Right" Width="150"></TreeGridColumn>
            </TreeGridColumns>
        </SfTreeGrid>
        </div>
    </div>
</div>


<style>
    .visible {
        display: inline-block;
        font-size: 18px;
        color: rgba(0,0,0,1);
    }

    .loading {
        position: absolute;
        height: 92%;
        width: 100%;
        background-color: rgba(1,1,1,0.2);
        z-index: 10000;
        display: flex;
        align-items: center;
        padding-left: 44%;
    }

    .topload {
        font-size: 15px;
    }
</style>
@code{

    public List<VirtualData> TreeGridData { get; set; } = new List<VirtualData>();

    public Boolean Data = true;

    protected override void OnInitialized()
    {
        TreeGridData = VirtualData.GetTreeVirtualData();
        Data = false;
    }


}
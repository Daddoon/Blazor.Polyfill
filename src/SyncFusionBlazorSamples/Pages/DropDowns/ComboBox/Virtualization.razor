@page "/ComboBox/Virtualization"

@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Data

@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample demonstrates the virtualization support of the ComboBox. The component has 150 items to it, but only 5 items will load to the popup when you open the popup. Remaining set number of items will load on each scrolling action in the popup.</p>
</SampleDescription>
<ActionDescription>
   <p>The ComboBox supports virtualization to improve the UI performance for a large amount of data when <code>EnableVirtualization</code> is enabled. This feature doesn’t render out the entire data source on initial component rendering. It loads the N number of items in the popup on initial rendering and the remaining set number of items will load on each scrolling action in the popup. It can work with both local and remote data.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="control-wrapper">
        <SfComboBox TValue="string" TItem="Record" Placeholder="Select an item" DataSource="@Records" Query="@LocalDataQuery" PopupHeight="130px" EnableVirtualization="true">
            <ComboBoxFieldSettings Text="Text" Value="ID"></ComboBoxFieldSettings>
        </SfComboBox>
    </div>
</div>

@code{
    public Query LocalDataQuery = new Query().Take(6); 
    public class Record 
    { 
        public string ID { get; set; } 
        public string Text { get; set; } 
    } 
    public List<Record> Records { get; set; } 
    protected override void OnInitialized()
    { 
        this.Records = Enumerable.Range(1, 150).Select(i => new Record() 
        { 
            ID = i.ToString(), 
            Text = "Item " + i, 
        }).ToList(); 
    } 
}

<style>
    .control-wrapper {
        width: 350px;
        margin: 0 auto;
        padding-top: 70px;
    }
</style>
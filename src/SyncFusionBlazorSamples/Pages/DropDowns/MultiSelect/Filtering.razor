@page "/MultiSelect-Dropdown/Filtering"

@using Syncfusion.Blazor.DropDowns

@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample demonstrates the filtering functionalities of the MultiSelect. Type a character in the MultiSelect element and choose one or more items from the <code>filtered</code> list.</p>
</SampleDescription>
<ActionDescription>
   <p>The MultiSelect has built-in support to filter the data source when  <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.MultiSelectEvents-1.html#Syncfusion_Blazor_DropDowns_MultiSelectEvents_1_Filtering' target='_blank'> AllowFiltering</a> is enabled. It performs when characters are typed in the component. In
      <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.DropDownListTemplates-1.html#Syncfusion_Blazor_DropDowns_DropDownListTemplates_1_ItemTemplate' target='_blank'> Filtering</a> event, you can filter down the data source and return the resulted data to MultiSelect via <code>UpdateData</code> method to display its list items. </p>
  <p>More information on the filtering feature configuration can be found in the <a href='https://blazor.syncfusion.com/documentation/multiselect-dropdown/filtering/' target='_blank'> documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="control-wrapper">
        <SfMultiSelect TValue="string[]" TItem="Countries" Placeholder="Select countries" DataSource="@Country" AllowFiltering="true">
            <MultiSelectFieldSettings Text="Name" Value="Code"></MultiSelectFieldSettings>
        </SfMultiSelect>
    </div>
</div>

@code{
    public class Countries
    {
        public string Name { get; set; }

        public string Code { get; set; }
    }

    private List<Countries> Country = new List<Countries>
    {
        new Countries() { Name = "Australia", Code = "AU" },
        new Countries() { Name = "Bermuda", Code = "BM" },
        new Countries() { Name = "Canada", Code = "CA" },
        new Countries() { Name = "Cameroon", Code = "CM" },
        new Countries() { Name = "Denmark", Code = "DK" },
        new Countries() { Name = "France", Code = "FR" },
        new Countries() { Name = "Finland", Code = "FI" },
        new Countries() { Name = "Germany", Code = "DE" },
        new Countries() { Name = "Greenland", Code = "GL" },
        new Countries() { Name = "Hong Kong", Code = "HK" },
        new Countries() { Name = "India", Code = "IN" },
        new Countries() { Name = "Italy", Code = "IT" },
        new Countries() { Name = "Japan", Code = "JP" },
        new Countries() { Name = "Mexico", Code = "MX" },
        new Countries() { Name = "Norway", Code = "NO" },
        new Countries() { Name = "Poland", Code = "PL" },
        new Countries() { Name = "Switzerland", Code = "CH" },
        new Countries() { Name = "United Kingdom", Code = "GB" },
        new Countries() { Name = "United States", Code = "US" },
    };
}

<style>
    .control-wrapper {
        width: 350px;
        margin: 0 auto;
        padding-top: 70px;
    }
</style>
@page "/MultiSelect-Dropdown/Keyboard-Navigation"

@using Syncfusion.Blazor.DropDowns

@inherits SampleBaseComponent;

<SampleDescription>
    <p>MultiSelect functionalities can be interactive with keyboard shortcuts. In the following sample, various key
        combinations can be used to interact with MultiSelect.</p>
</SampleDescription>
<ActionDescription>
    <p>The MultiSelect supports the following keyboard shortcuts to initiate various actions.</p>
    <ul>
        <li>
            <b>Focus</b>
            <ul>
                <li>
                    <span class="key-class"><kbd>Alt</kbd> + <kbd>J</kbd></span>
                    <span> - Focuses on the first component of the sample.</span>
                </li>
            </ul>
        </li>
        <li>
            <b>Input Navigation</b>
            <ul>
                <li>
                    <span class="key-class"><kbd>Alt</kbd> + <kbd>Down arrow</kbd></span>
                    <span> - Opens the popup list.</span>
                </li>
                <li>
                    <span class="key-class"><kbd>Alt</kbd> + <kbd>Up arrow</kbd></span>
                    <span> - Closes the popup list.</span>
                </li>
            </ul>
        </li>
        <li>
            <b>Selection</b>
            <ul>
                <li>
                    <span class="key-class"><kbd>Enter</kbd></span>
                    <span> - Selects the focused item, and the popup list closes when it
                    is in the open state.</span>
                </li>
            </ul>
        </li>
        <li>
            <b>Popup Navigation</b>
            <ul>
                <li>
                    <span class="key-class"><kbd>Down arrow</kbd></span>
                    <span> - Set focus at the first item in the MultiSelect when no
                    item is selected. Otherwise, moves focus next to the currently selected item.</span>
                </li>
                <li>
                    <span class="key-class"><kbd>Up arrow</kbd></span>
                    <span> - Moves focus previous to the currently selected one.</span>
                </li>
                <li>
                    <span class="key-class"><kbd>Page down</kbd></span>
                    <span> - Scrolls down to the next page and set focus to the first
                    item when the popup list opens.</span>
                </li>
                <li>
                    <span class="key-class"><kbd>Page up</kbd></span>
                    <span> - Scrolls up to the previous page and sets focus to the first
                    item when the popup list opens.</span>
                </li>
                <li>
                    <span class="key-class"><kbd>Home</kbd></span>
                    <span> - Set focus to the first item.</span>
                </li>
                <li>
                    <span class="key-class"><kbd>End</kbd></span>
                    <span> - Set focus to the last item.</span>
                </li>
                <li>
                    <span class="key-class"><kbd>Esc</kbd></span>
                    <span> - Closes the popup list when it is in an open state and the
                    currently selected item remains the same.</span>
                </li>
                <li>
                    <span class="key-class"><kbd>Tab</kbd></span>
                    <span> - Focuses on the next Tab Index element on the page when the
                    popup is closed. Otherwise, closes the popup list and the focus remains on the component.</span>
                </li>
                <li>
                    <span class="key-class"><kbd>Shift</kbd> + <kbd>Tab</kbd></span>
                    <span> - Focuses on the previous Tab Index element on
                    the page when the popup is closed. Otherwise, closes the popup list and the focus remains on the
                    component.</span>
                </li>
            </ul>
        </li>
    </ul>
</ActionDescription>

<div class="control-section col-lg-12">
    <div class="col-lg-6">
        <div class="content">
            <h4>Default Mode</h4>
            <SfMultiSelect TValue="int[]" TItem="Colors" Placeholder="Select a color" DataSource="@ColorsData"
                Mode="@VisualMode.Default" @bind-Value="@ColorValue">
                <MultiSelectFieldSettings Text="Color" Value="Code"></MultiSelectFieldSettings>
            </SfMultiSelect>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="content">
            <h4>Checkbox Mode</h4>
            <SfMultiSelect TValue="string[]" TItem="Countries" AllowFiltering="true" Placeholder="Select countries"
                Mode="@VisualMode.CheckBox" DataSource="@Country" FilterBarPlaceholder="Search countries"
                PopupHeight="350px" @bind-Value="@CountryValue">
                <MultiSelectFieldSettings Text="Name" Value="Code"></MultiSelectFieldSettings>
            </SfMultiSelect>
        </div>
    </div>
</div>

@code {
    public int[] ColorValue { get; set; } = new int[] { 1, 9 };
    public string[] CountryValue { get; set; } = new string[] { "GL", "MX" };
    public bool ShowSelectAllCheckBox { get; set; } = true;
    public bool EnableSelectionOrders { get; set; } = false;
    public bool EnableCheckBox { get; set; } = true;
    public class Colors
    {
        public int Code { get; set; }
        public string Color { get; set; }
    }
    public class Countries
    {
        public string Name { get; set; }
        public string Code { get; set; }
    }
    public List<Colors> ColorsData = new List<Colors>()
{
new Colors() { Color = "Chocolate", Code = 1 },
new Colors() { Color = "CadetBlue", Code = 2 },
new Colors() { Color = "DarkOrange", Code = 3 },
new Colors() { Color = "DarkRed", Code = 4},
new Colors() { Color = "Fuchsia", Code = 5 },
new Colors() { Color = "HotPink", Code = 6 },
new Colors() { Color = "Indigo", Code = 7 },
new Colors() { Color = "LimeGreen", Code = 8 },
new Colors() { Color = "OrangeRed", Code = 9 },
new Colors() { Color = "Tomato", Code = 10 },
new Colors() { Color = "Brown", Code = 11 },
new Colors() { Color = "Maroon", Code = 12 },
new Colors() { Color = "Green", Code = 13 },
new Colors() { Color = "Pink", Code = 14 },
new Colors() { Color = "Purple", Code = 15 }
};
    List<Countries> Country = new List<Countries>
{
new Countries() { Name = "Australia", Code = "AU" },
new Countries() { Name = "Bermuda", Code = "BM" },
new Countries() { Name = "Canada", Code = "CA" },
new Countries() { Name = "Cameroon", Code = "CM" },
new Countries() { Name = "Denmark", Code = "DK" },
new Countries() { Name = "France", Code = "FR" },
new Countries() { Name = "Finland", Code = "FI" },
new Countries() { Name = "Germany", Code = "DE" },
new Countries() { Name = "Greenland", Code = "GL" },
new Countries() { Name = "Hong Kong", Code = "HK" },
new Countries() { Name = "India", Code = "IN" },
new Countries() { Name = "Italy", Code = "IT" },
new Countries() { Name = "Japan", Code = "JP" },
new Countries() { Name = "Mexico", Code = "MX" },
new Countries() { Name = "Norway", Code = "NO" },
new Countries() { Name = "Poland", Code = "PL" },
new Countries() { Name = "Switzerland", Code = "CH" },
new Countries() { Name = "United Kingdom", Code = "GB" },
new Countries() { Name = "United States", Code = "US" },
};
}

<style>
    .content {
        width: 270px;
        margin-left: 50px;
        padding-top: 30px;
    }

    .description {
        margin: 4px;
    }
    .key-class {
        display: inline-block;
        width: 130px;
    }
</style>
@page "/Calendar/Disabled-Dates"

@using Syncfusion.Blazor.Calendars

@inherits SampleBaseComponent;

<SampleDescription>
    <p>In the following sample, all the weekends (Saturday and Sunday) of a month are <code>disabled</code>, and these dates are restricted to set or select in the Calendar.</p>
</SampleDescription>
<ActionDescription>
    <p>Disabled Dates sample demonstrates, how to disable a specific dates in the Calendar by using <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.CalendarEvents-1.html#Syncfusion_Blazor_Calendars_CalendarEvents_1_OnRenderDayCell' target='_blank'>OnRenderDayCell</a> event. This event gets triggered on each day cell element creation that allows you to customize or disable the specific dates in the Calendar. Here the weekend date's are disabled by using OnRenderDayCell.</p>
    <p>More information on the customize dates can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/calendar/events/#onrenderdaycell'> documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <div id="calender-control">
        <SfCalendar TValue="DateTime?" @ref="@CalendarObj" @bind-Value="@SelectedDate">
            <CalendarEvents TValue="DateTime?" OnRenderDayCell="@DisableDate"></CalendarEvents>
        </SfCalendar>
        <div id="display-date">
            <span>Selected value: @(SelectedDate?.ToString("M/d/yyyy"))</span>
        </div>
    </div>
</div>

<style>
    #calender-control {
        max-width: 300px;
        margin: 0 auto;
    }

    #display-date {
        max-width: 300px;
        margin: 0 auto;
        padding-top: 10px;
    }
</style>

@code {

    private DateTime? SelectedDate { get; set; } = DateTime.Now;
    private SfCalendar<DateTime?> CalendarObj { get; set; }
    private void DisableDate(RenderDayCellEventArgs args)
    {
        var view = CalendarObj.CurrentView();
        if (view == "Month" && ((int) args.Date.DayOfWeek == 0 || (int) args.Date.DayOfWeek == 6))
        {
            args.IsDisabled = true;
        }
    }
}

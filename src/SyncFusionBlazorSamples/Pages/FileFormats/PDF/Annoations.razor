@page "/pdf/annotations"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnvironment
@inherits SampleBaseComponent;
@*Hidden:Lines*@

@using BlazorDemos.Data.FileFormats.PDF

@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the creation of different type of annotations such as ink, free text, pop up, text markup annotation and more. The Essential PDF supports <a target='_blank' href='https://help.syncfusion.com/file-formats/pdf/working-with-annotations#supported-annotation-types'>20+ annotations</a> with create, edit, and delete support.</p>
</SampleDescription>
<ActionDescription>
   <p>This feature can be used for reviewing purpose. More information about the annotations can be found in this documentation <a target='_blank' href='https://help.syncfusion.com/file-formats/pdf/working-with-annotations'>section.</a></p>
</ActionDescription>

<div class="control-section">
    <p style="font-weight:normal">Click the button to view a PDF document generated by Essential PDF. Please note that Adobe Reader or its equivalent is required to view the resultant document. </p>
    <div class="checkbox-control">
        <div class="row">
            <SfCheckBox @bind-Checked="@flatten" Label="Flatten annotation" TChecked="bool"></SfCheckBox>
        </div>
    </div>
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="GeneratePDF">Generate PDF</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radio-control {
        margin: 0 0 5% 0;
    }

    .control-section .row {
        margin: 10px 0;
    }
</style>


@code {
    bool flatten;
    /// <summary>
    /// Create and download the simple PDF document
    /// </summary>
    public async void GeneratePDF(MouseEventArgs args)
    {
        AnnotationsService service = new AnnotationsService(hostingEnvironment);
        MemoryStream documentStream = service.CreatePdfDocument(flatten);
        await JS.SaveAs("Annotations.pdf", documentStream.ToArray());
    }
}
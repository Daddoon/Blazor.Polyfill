@page "/progress-bar/radius"
@using Syncfusion.Blazor.ProgressBar
@using Syncfusion.Blazor
@inject NavigationManager Navigation
@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample illustrates a circular progress bar with customization options like radius, inner-radius, pie progress, track and progress thickness.</p>
</SampleDescription>
<ActionDescription>
    <p>This demo for Blazor Progress Bar control shows the customizing options for radius, inner-radius, pie progress, track and progress thickness customization.</p>
</ActionDescription>

<div class="control-section">
    <div class="row" style="margin-top: 4%;">
        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar ID="FullBackground"
                           @ref="ProObj1"
                           Type="ProgressType.Circular"
                           Minimum="0"
                           Maximum="100"
                           Value="60"
                           Width="160px"
                           Height="170px"
                           Radius="100%"
                           InnerRadius="190%"
                           ProgressThickness="10"
                           TrackThickness="80"
                           ProgressColor="@ProgressColor"
                           CornerRadius="CornerType.Round"
                           TrackColor="@FullTrackColor"
                           Theme="@CurrentTheme">
                <ProgressBarAnimation Enable="true" Duration="3000" Delay="0" />
                <ProgressBarAnnotations>
                    <ProgressBarAnnotation>
                        <ContentTemplate>
                            <div style='font-size:20px;font-weight:bold;color:#ffffff;fill:#ffffff'><span>60%</span></div>
                        </ContentTemplate>
                    </ProgressBarAnnotation>
                </ProgressBarAnnotations>
            </SfProgressBar>
        </div>

        @*<div class="col-lg-4 col-md-4 col-4" align="center">
                <SfProgressBar ID="PartBackground"
                               Type="ProgressType.Circular"
                               Value="60"
                               Minimum="0"
                               Maximum="100"
                               Width="160px"
                               Height="170px"
                               Radius="80px"
                               InnerRadius="80px"
                               TrackThickness="62"
                               ProgressThickness="59"
                               TrackColor="lightgrey"
                               Theme="@CurrentTheme">
                    <ProgressBarAnimation Enable="true" Duration="3000" Delay="0" />
                </SfProgressBar>

            </div>*@

        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar ID="OuterRadius"
                           @ref="ProObj2"
                           Type="ProgressType.Circular"
                           Value="90"
                           Minimum="0"
                           Maximum="100"
                           Width="160px"
                           Height="170px"
                           InnerRadius="72"
                           ProgressThickness="8"
                           CornerRadius="CornerType.Round"
                           Theme="@CurrentTheme">
                <ProgressBarAnimation Enable="true" Duration="3000" Delay="0" />
            </SfProgressBar>
        </div>

        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar ID="OnRadius"
                           @ref="ProObj3"
                           Type="ProgressType.Circular"
                           Value="90"
                           Minimum="0"
                           Maximum="100"
                           Width="160px"
                           Height="170px"
                           TrackThickness="3"
                           ProgressThickness="8"
                           CornerRadius="CornerType.Round"
                           Theme="@CurrentTheme">
                <ProgressBarAnimation Enable="true" Duration="3000" Delay="0" />
            </SfProgressBar>
        </div>

        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar ID="Pie"
                           @ref="ProObj4"
                           Type="ProgressType.Circular"
                           Value="70"
                           Minimum="0"
                           Maximum="100"
                           Width="160px"
                           Height="170px"
                           EnablePieProgress="true"
                           CornerRadius="CornerType.Round"
                           Theme="@CurrentTheme">
                <ProgressBarAnimation Enable="true" Duration="3000" Delay="0" />
            </SfProgressBar>
        </div>
    </div>
    <div class="row" align="center">
        <button id="reLoad" class="e-control e-btn e-lib e-outline e-primary" @onclick="ProgressRefresh">Reload</button>
    </div>
</div>

@code{ 
    public SfProgressBar ProObj1, ProObj2, ProObj3, ProObj4;
    public Theme CurrentTheme { get; set; }
    public string FullTrackColor { get; set; }
    public string ProgressColor { get; set;} = "#FFFFFF";
    private string currentUri;

    public async Task ProgressRefresh()
    {
        await ProObj1.RefreshAsync();
        await ProObj2.RefreshAsync();
        await ProObj3.RefreshAsync();
        await ProObj4.RefreshAsync();
    }

    protected override void OnInitialized()
    {
        currentUri = Navigation.Uri;
        if (currentUri.Contains("fabric-dark"))
        {
            CurrentTheme = Theme.FabricDark;
            ProgressColor = "#9A9A9A";
        }
        else if (currentUri.Contains("fabric"))
        {
            CurrentTheme = Theme.Fabric;
            FullTrackColor = "#0078D6";
        }
        else if (currentUri.Contains("bootstrap-dark"))
        {
            CurrentTheme = Theme.BootstrapDark;
            ProgressColor = "#9A9A9A";
        }
        else if (currentUri.Contains("bootstrap5-dark"))
        {
            CurrentTheme = Theme.Bootstrap5Dark;
            ProgressColor = "#0D6EFD";
        }
        else if (currentUri.Contains("bootstrap5"))
        {
            CurrentTheme = Theme.Bootstrap5;
            FullTrackColor = "#0D6EFD";     
        }
        else if (currentUri.Contains("bootstrap4"))
        {
            CurrentTheme = Theme.Bootstrap4;
            FullTrackColor = "#007bff";
        }
        else if (currentUri.Contains("bootstrap"))
        {
            CurrentTheme = Theme.Bootstrap;
            FullTrackColor = "#317ab9";
        }
        else if (currentUri.Contains("highcontrast"))
        {
            CurrentTheme = Theme.HighContrast;
            FullTrackColor = "#FFD939";
        }
        else if (currentUri.Contains("tailwind-dark"))
        {
            CurrentTheme = Theme.TailwindDark;
            ProgressColor = "#22D3EE";
        }
        else if (currentUri.Contains("tailwind"))
        {
            CurrentTheme = Theme.Tailwind;
            FullTrackColor = "#4F46E5";
        }
        else if (currentUri.Contains("material-dark"))
        {
            CurrentTheme = Theme.MaterialDark;
            ProgressColor = "#9A9A9A";
        }
        else if (currentUri.Contains("material"))
        {
            CurrentTheme = Theme.Material;
            FullTrackColor = "#e91e63";
            ProgressColor = "#E3165B";
        }
    }
}

<style>
    #control-container {
        padding: 0px !important;
    }

    .progress-text-align {
        font-family: Roboto-Regular;
        font-size: 14px;
        color: #3D3E3C;
    }

    #reLoad {
        border-radius: 4px;
        text-transform: capitalize;
        margin-top: 3%;
    }
</style>